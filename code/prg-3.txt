import React from "react";
import { Formik, Form, Field, ErrorMessage } from "formik";
import * as Yup from "yup";

const loginSchema = Yup.object().shape({
  password: Yup.string()
    .min(8, "Too Short!")
    .max(50, "Too Long!")
    .required("Required"),
  email: Yup.string().email("Invalid email").required("Required")
});

function LoginForm() {
  const handleSubmit = (values, { setSubmitting }) => {
    setTimeout(() => {
      alert(JSON.stringify(values, null, 2));
      setSubmitting(false);
    }, 400);
  };

 
    return (
      <>
        <h1>Login</h1>
        <Formik
          initialValues={{ email: "", password: "" }}
          validationSchema={loginSchema}
          onSubmit={handleSubmit}
        >
          {({ isSubmitting }) => {
            return (
              <Form>
                <label>
                  Email: <Field type="email" name="email" />
                  <ErrorMessage name="email" component="div" />
                </label>
                <label>
                  Password:
                  <Field type="password" name="password" />
                  <ErrorMessage name="password" component="div" />
                </label>
                <button type="submit" disabled={isSubmitting}>
                  Submit
                </button>
              </Form>
            );
          }}
        </Formik>
      </>
    );

}

export default LoginForm;



-------------------------------------------------------------------------------------------------------


import React from 'react';
import ReactDom from 'react-dom';
// import { useState } from 'react';
import { useFormik } from "formik";

 function App() {

  const formik = useFormik({
   
  initialValues: {
      email: ""
    },

    onSubmit: (values) => {
      alert("Login Sucessfuly");
    },

    validate: (values) => {
      let errors = {};
      if (!values.email ) errors.email = <p style={{color:"red"}}>'Required'</p>
      else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(values.email)) {
        errors.email = <p style={{color:"red"}}> "username should be an email"</p> }
      if(!values.password) errors.password =<p style={{color:"red"}}> "field required"</p>
      return errors;
    }
  });

  // function validation(){
  //   const mail=document.getElementById("email").value;
  //   const word=document.getElementById("password").value;
    
  // }
  return (
    <form onSubmit={formik.handleSubmit}>
      <label htmlFor="email">Email Address</label>
      <input
        id="email"
        name="email"
        type="email"
        onChange={formik.handleChange}
        value={formik.values.email} 
      />
      {formik.errors.email ? <div>{formik.errors.email}</div> : null}<br/>

<label htmlFor="password">Password</label>
<input
        id="password"
        name="password"
        type="password"
        onChange={formik.handleChange}
        value={formik.values.password}
      />
      {formik.errors.password ? <div>{formik.errors.password}</div> : null}
      <button type="submit">Submit</button>
    </form>
  );
}

ReactDom.render(<App/>,document.getElementById('root'));
export default App;